// Button
	// -global button
	// @param : Width of Element
	// @param : Height of element
	// @param : Optional Transition

@mixin btn($conf : ()) {
	$conf: map-merge((
		height: null,
		width: null,
		transition : null,
		padding : 1,
		fontSize : null,
		fontFamily : null,
		fontWeight : null,
		background : null,
		color : null,
		corners : null,
		caps : false,
		borderSize : null,
		borderColor : null,
	), $conf);
	
	display: inline-block;
	position: relative;
	vertical-align: middle;
	height: map-get($conf, height);
	width: map-get($conf, width);
	text-align: center;
	cursor: pointer;
	transition: map-get($conf, transition);
	@if map-get($conf, padding) {
		padding: 0 baseline(map-get($conf, padding));
	}
	@if map-get($conf, fontSize) or map-get($conf, fontFamily) or map-get($conf, caps) {
		@include type-style($fontSize : map-get($conf, fontSize), $fontFamily : map-get($conf, fontFamily), $caps : map-get($conf, caps), $fontWeight : map-get($conf, fontWeight));
	}
	@if map-get($conf, borderSize) {
		@include border-style($size : map-get($conf, borderSize), $color :  map-get($conf, borderColor));
		line-height: calc(#{map-get($conf, height)} - #{map-get($conf, borderSize) * 2});
	}
	@else {	
		line-height: map-get($conf, height);
	}
	@if map-get($conf, background) or map-get($conf, color) or map-get($conf, corners) or map-get($conf, depth){
		@include box-style($background : map-get($conf, background), $color : map-get($conf, color), $corners : map-get($conf, corners), $depth : map-get($conf, depth))
	}
	img {
		@if map-get($conf, fontSize) {
			max-height: map-get($conf, fontSize);
		}
		@else {
			max-height: 60%;
		}
		vertical-align: middle;
	}
}

// Tool-tip
	// -global button
	// @param : Position of tooltip (top, right, bottom, left)
	// @param : Optional transition styling determined by the theme

@mixin tool-tip($position : top, $tansition : none) {
	position: relative;
	span {
		visibility: hidden;
		white-space: nowrap;
		pointer-events: none;
		transition: $tansition;
		padding: 0 baseline(1/2);

		&::after {
			content: ' ';
			width: baseline(1/3);
			height: baseline(1/3);
			transform: rotate(45deg);		
		}

		@if $position == top {
			@include absolute(top);
		} @else if $position == right {
			@include absolute(right);
		} @else if $position == bottom {
			@include absolute(bottom);
		} @else if $position == left {
			@include absolute(left);
		}
	}
	
	&:hover span {
		visibility: visible;
	}
}
