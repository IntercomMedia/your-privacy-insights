$btn-defaults: (
	display: inline-flex,
	type-style: p,
	position: relative,
	flex-direction: column,
	align-content: center,
	justify-content: center,
	cursor: pointer,
	white-space: nowrap,
	overflow: hidden,
	align-items: center
);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//	1. Application:
//	------------------------------------------------------------------------------
//	
// 	These describe the structure and shape of the button and 
//	semanticly indicate where/when they should be applied
//
//	------------------------------------------------------------------------------
//
//	Naming conventions
//		-Noun describing hierarchical prominence or it's general likeness
//
//	Definable properties
//		-display
//		-padding/margin/spacing	
//		-height
//		-width
//		-transition
//		-type styles
//		-border-radius
//		-border-size
//		-disable before and after pseudo classes: before: false, after: false
//
//	Output: .btn-[key]
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
		
$btnApplications: (
	'callout': (
		height: size(l),
		transition: transition('all'),
		font-size: 1,
		text-transform: uppercase,
		type-style: p,
	),
	'small': (
		height: baseline(1.5),
		transition: transition('all'),
		text-transform: uppercase,
		type-style: micro,
	),
	'icon': (
		height: baseline(2),
		transition: transition('all'),
	),
	'circle': (
		height: baseline(1.5),
		width: baseline(1.5),
		transition: transition('all'),
		padding: null,
		border-radius: 100%
	),
	'dot': (
		height: size(s),
		width: size(s),
		transition: transition('all'),
		padding: null,
		border-radius: 100%
	)
);


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//	2. Variation:
//	------------------------------------------------------------------------------
//	
// 	These describe the asthetic and hierarchy through color, naming indicates priority and visual
//	presence/importance
//
//	------------------------------------------------------------------------------
//
//	Namign conventions
//		-Adjective describing hierarchical prominence 
//		-3 letter abbreviation
//
//	Definable properties
//		-background
//		-color
//		-hover
//		-pseudo class effects
//		-transition
//		-border-color
//
//	Output: [class=^".btn"].[key]
//	Placeholder: %.btn-[key]
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

$btnVariations: (
	'def': (
		background: color(primary, 1),
		border-color: color(primary, 1),
		border-size: line(s),
		color: color(light, 1),
		hover: (
			background: color(primary, 3),
			border-color: color(primary, 3),
			color: color(light, 1)
		)
	),
	'alt': (
		background: color(secondary, 1),
		border-color: color(secondary, 1),
		border-size: line(s),
		color: color(light, 1),
		hover: (
			color: color(secondary, 1),
			background: transparent
		)
	),
	'aux': (
		color: color(primary, 1),
		border-color: color(primary, 1),
		border-size: line(s),
		hover: (
			border-color: color(primary, 1),
			background: color(primary, 1),
			color: color(light, 1)
		)
	),
	'dis': (
		background: color(disabled),
		color: color(light, 1),
		cursor: not-allowed,
		hover: (
			
		)
	),
	'link': (
		background: 'none',
		color: color('primary', 1),
		hover: (
			background :color(primary, 1),
			color: color(light, 1)
		)
	),
	'alt-dark': (
		color: color(light, 2),
		border-color: color('tertiary',1),
		border-size: line(s),
		hover: (
			background: color('tertiary',1),
			color: color(dark,3)
		)
	),
	'ok': (
		color: color(light, 2),
		background: color('tertiary',1),
		border-color: color('tertiary',1),
		border-size: line(s),
		hover: (
			background: color('tertiary',2),
		)
	),
);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//	3. Action:
//	------------------------------------------------------------------------------
//	
// 	These describe the affordance of the button. The defined color, shape and effects
//	indicate to the user what the button will do and how they should interact with it
//
//	------------------------------------------------------------------------------
//	
//	Namign conventions
//		-Unhyphenated verb with clear implication of what the button does
//	
//	Definable properties
//		-all, but avoid structural changes if possible. 
//
//	Output: [class=^".btn"].[key]
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

$btnActions: (
	'add': (
		before: (
			content: '',
			transition: transition(1),
			position: absolute,
			right: 1em,
			top: 50%,
			transform: translateX(50%) translateY(-50%) rotate(-45deg),
			height: 0.15em,
			width: 0.6em,
			background-color: color(light, 2),
			opacity: 0,
		),
		after: (
			content: '',
			transition: transition(1),
			position: absolute,
			right: 1em,
			top: 50%,
			transform: translateX(50%) translateY(-50%) rotate(-45deg),
			height: 0.6em,
			width: 0.15em,
			background-color: color(light, 2),
			opacity: 0,
		),
		hover: (
			background-color: color(primary, 1),
			color: color(light, 1),
			padding-right: 2em,
			before: (
				transform: translateX(50%) translateY(-50%) rotate(0),
				opacity: 1,
			),
			after: (
				transform: translateX(50%) translateY(-50%) rotate(0),
				opacity: 1,
			)
		)
	),
	'delete': (
		before: (
			content: '',
			transition: transition(1),
			position: absolute,
			right: 1em,
			top: 50%,
			transform: translateX(50%) translateY(-50%) rotate(0),
			height: 0.15em,
			width: 0.6em,
			background-color: color(light, 2),
			opacity: 0,
		),
		after: (
			content: '',
			transition: transition(1),
			position: absolute,
			right: 1em,
			top: 50%,
			transform: translateX(50%) translateY(-50%) rotate(0),
			height: 0.6em,
			width: 0.15em,
			background-color: color(light, 2),
			opacity: 0,
		),
		hover: (
			background-color: color(danger),
			border-color: color(primary, 3),
			color: color(light, 1),
			padding-right: 2em,
			before: (
				transform: translateX(50%) translateY(-50%) rotate(-45deg),
				opacity: 1,
			),
			after: (
				transform: translateX(50%) translateY(-50%) rotate(-45deg),
				opacity: 1,
			)
		)
	),
	'tab': (
		border-bottom-right-radius: 0,
		border-bottom-left-radius: 0,
		after: (
			content: ' ',
			transition: transition(1),
			position: absolute,
			left: 50%,
			bottom: 0,
			transform: translateX(-50%),
			border-top: 0 solid,
			width: 40%,
		),
		hover: (
			after: (
				border-top: 0.2em solid,
			)
		),
		states: (
			selected: (
				background: color(primary, 1),
				height: size(xl),
				after: (
					border-top: 0.3em solid,
				)
			)
		)
	)
);

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
//
//	4. State:
//	------------------------------------------------------------------------------
//	
// 	These describe to the user which state the button is in.
//
//	------------------------------------------------------------------------------
//
//	Naming conventions
//		-Unhyphenated past tense verb with clear implication of which action has been taken
//	
//	Definable properties
//		-all, but avoid structural changes if possible. 
//
//	Output: [class=^".btn"].[key]
//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -


$btnStates: (
	'disabled': (
		background-color: color(disabled),
		color: color(light, 1),
		cursor: not-allowed,
	),
	'activated': (
		box-shadow: inset 0 0 size(s) rgba(0, 0, 0, 0.2),
	),
	'deactived': (
		box-shadow: inset 0 0 size(s) rgba(0, 0, 0, 0.2),
	),
	'selected': (
		box-shadow: inset 0 0 200% rgba(0, 0, 0, 0.35),
	)
)