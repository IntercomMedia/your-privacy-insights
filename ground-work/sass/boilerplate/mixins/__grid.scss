// Row
	// @param : Size of gutters between the columns in a row

@mixin row($gutter: null, $width: null, $wrap: false) {
	display: flex;
	max-width: $width;
	@if $gutter {
		margin-bottom: $gutter;
		&:last-child {
			margin-bottom: 0;
		}
		> [class*='col'] {
			margin-right: $gutter;
			&:last-child {
				margin-right: auto;
			}
		}
	}
	@if $wrap {
		flex-wrap: wrap;
	}
	@include phone {
		flex-wrap: wrap;
		
		> [class*='col'] {
			margin-right: 0;
		}
	}
	.ie &::after {
		content: ' ';
		display: block;
		clear: both;
	}
}

// Column
	// Requires a map to process

@mixin col($config) {
	$config: map-merge((
		desktop: null,
		tablet: null,
		phone: null,
		display: block,
		width: null,
		device: null,
	), $config);
		
	// Conditionals
	
	// Columns with Default Breakpoints
	@if map-get($config, desktop) {
		width: map-get($config, desktop)  * 100%;
		
		// Breakpoints
		
		// Tablet
		@if map-get($config, tablet) {
			@include tablet {
				width: map-get($config, tablet) * 100%;
			}
		}
		// Phone
		@if map-get($config, phone) {
			@include phone {
				width: map-get($config, phone)  * 100%;
			}
		}
	}	
	
	// Columns with Specified Breakpoints
	@if map-get($config, width) && map-get($config, device) {
		@if map-get($config, device) == 'desktop' {
			@include desktop {
				width: map-get($config, width);
			}
		}
		@if map-get($config, device) == 'tablet' {
			@include tablet {
				width: map-get($config, width);
			}
		}
		@if map-get($config, device) == 'phone' {
			@include phone {
				width: map-get($config, width);
			}
		}
	}
	
	@if map-get($config, display) {
		display: map-get($config, display);
	}
	.ie & {
		float: left;
	}
}